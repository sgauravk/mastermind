{"version":3,"sources":["row.js","App.js","index.js"],"names":["Row","props","colors","pattern","fnRef","id","createColorDiv","bind","color","className","this","style","background","onClick","map","React","Component","_","require","App","generateOneRow","allColors","take","shuffle","emptyColor","Array","fill","currentRowCount","selectedColor","allRows","selectedColors","currentRow","nth","document","getElementById","childNodes","querySelectorAll","forEach","x","push","resultSection","calculateResult","correctColor","correctPosition","range","i","disableAllRowsClick","isGameOver","enableCurrentRowsClick","correctPositions","palletColor","querySelector","length","msg","split","c","innerText","userSelection","includes","row","element","onclick","createCheckButton","event","border","target","colorsElement","validateRow","selectColor","ReactDOM","render"],"mappings":"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","file":"static/js/main.7bf8d708.chunk.js","sourcesContent":["import React from 'react';\nimport './row.css';\n\n\nclass Row extends React.Component {\n  constructor(props) {\n    super(props);\n    this.colors = props.colors;\n    this.pattern = props.pattern;\n    this.fnRef = props.fnRef;\n    this.id = props.id;\n    this.createColorDiv.bind(this);\n  }\n\n  createColorDiv(color) {\n    return <div className={this.id} style={{background: color}} id={this.id} onClick={this.fnRef}/>\n  }\n\n  render() {\n    return this.colors.map(color => this.createColorDiv(color));\n  }\n}\n\nexport default Row;\n","import React from 'react';\nimport './App.css';\nimport Row from './row'\n\nconst _ = require('lodash');\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.generateOneRow.bind(this);\n    this.allColors = [\"white\", \"blue\", \"red\", \"green\", \"aqua\", \"blueviolet\", \"yellow\", \"deeppink\"];\n    this.pattern = _.take(_.shuffle(this.allColors), 5);\n    this.emptyColor = new Array(5).fill(\"\");\n    this.currentRowCount = 1;\n    this.selectedColor = \"\";\n    this.allRows = new Array(12).fill(this.emptyColor);\n  }\n\n  validateRow() {\n    const selectedColors = [];\n    const currentRowCount = 12 - this.currentRowCount++;\n    const currentRow = _.nth(document.getElementById(\"allRows\").childNodes, currentRowCount);\n    let selectedColorsElements = currentRow.querySelectorAll(\"#color\");\n    selectedColorsElements.forEach(x => selectedColors.push(x.style.background));\n    const resultSection = currentRow.querySelectorAll(\"#resultSection\");\n    const {correctColor, correctPosition} = this.calculateResult(selectedColors);\n    _.range(0, correctPosition).forEach(i => resultSection[i].style.background = \"darkorange\");\n    _.range(correctPosition, correctColor + correctPosition).forEach(i => resultSection[i].style.background = \"aqua\");\n    this.disableAllRowsClick();\n    if (this.isGameOver(correctPosition)) return;\n    this.enableCurrentRowsClick();\n  }\n\n  isGameOver(correctPositions) {\n    const palletColor = document.querySelector(\".pallet\").childNodes;\n    if (correctPositions === this.pattern.length) {\n      const msg = \"YOU WON \".split(\"\");\n      palletColor.forEach((c, i) => c.innerText = msg[i]);\n      return true;\n    }\n    if (this.currentRowCount > 12) {\n      const msg = \"GAMEOVER\".split(\"\");\n      palletColor.forEach((c, i) => c.innerText = msg[i]);\n      return true;\n    }\n    return false;\n  }\n\n  calculateResult(userSelection) {\n    let correctColor = 0;\n    let correctPosition = 0;\n    for (let i = 0; i < userSelection.length; i++) {\n      if (userSelection[i] === this.pattern[i]) {\n        correctPosition++;\n        continue;\n      }\n      this.pattern.includes(userSelection[i]) && correctColor++;\n    }\n    return {correctColor, correctPosition};\n  }\n\n  disableAllRowsClick() {\n    const allRows = document.getElementById(\"allRows\").childNodes;\n    allRows.forEach(row => {\n      row.style.background = \"inherit\";\n      row.childNodes.forEach(element => element.onclick = null)\n    });\n  }\n\n  createCheckButton() {\n    return <button>check</button>\n  }\n\n  generateOneRow(colors) {\n    return <div className=\"row\">\n      <Row colors={colors} id=\"color\"/>\n      {this.createCheckButton()}\n      <Row colors={colors} id=\"resultSection\"/>\n    </div>\n  }\n\n  selectColor(event) {\n    document.querySelectorAll(\".color\").forEach(x => x.style.border = \"0\");\n    this.selectedColor = event.target.style.background;\n    event.target.style.border = \"1px solid white\";\n  }\n\n  enableCurrentRowsClick() {\n    const currentRowCount = 12 - this.currentRowCount;\n    const currentRow = _.nth(document.getElementById(\"allRows\").childNodes, currentRowCount);\n    currentRow.style.background = \"#001b1bd9\";\n    const colorsElement = currentRow.querySelectorAll(\"#color\");\n    currentRow.querySelector(\"button\").onclick = this.validateRow.bind(this);\n    colorsElement.forEach(x => x.onclick = () => x.style.background = this.selectedColor);\n  }\n\n  componentDidMount() {\n    this.enableCurrentRowsClick();\n  }\n\n  render() {\n    let allRows = this.allRows.map(row => this.generateOneRow(row));\n    return <main>\n      <div id=\"allRows\" className=\"board\">{allRows}</div>\n      <div className=\"row pallet\"><Row colors={this.allColors} fnRef={this.selectColor.bind(this)} id=\"color\"/></div>\n    </main>\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}